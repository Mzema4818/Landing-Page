/* Variables */
:root {
    --numDots: 20;
    --parentWidthBase: 0.8;
    --parentWidth: calc(var(--parentWidthBase) * 100vw);
    --parentMaxWidth: 1000px;
    --dotWidth: 25px;
    --dotWidthSm: 17px;
    --active: #2C3E50;
    --inactive: #AEB6BF;
  }
  
  .flex-parent {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
  }
  
  .input-flex-container {
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: var(--parentWidth);
    height: 100px;
    max-width: var(--parentMaxWidth);
    position: relative;
    z-index: 0;
  }
  
  .input {
    width: var(--dotWidth);
    height: var(--dotWidth);
    background-color: var(--active);
    position: relative;
    border-radius: 50%;
  }
  
  .input:hover {
    cursor: pointer;
  }
  
  .input::before, .input::after {
    content: '';
    display: block;
    position: absolute;
    z-index: -1;
    top: 50%;
    transform: translateY(-50%);
    background-color: var(--active);
    width: 100px; /* Temporarily fixed width */
    height: 5px; /* Temporarily fixed height */
  }
  
  .input::before {
    left: calc(-var(--parentWidth) / var(--numDots) + var(--dotWidth) / 2);
  }
  
  .input::after {
    right: calc(-var(--parentWidth) / var(--numDots) + var(--dotWidth) / 2);
  }
  
  .input.active {
    background-color: var(--active);
  }
  
  .input.active::before {
    background-color: var(--active);
  }
  
  .input.active::after {
    background-color: var(--inactive);
  }
  
  .input.active ~ .input, .input.active ~ .input::before, .input.active ~ .input::after {
    background-color: var(--inactive);
  }
  
  .input span {
    width: 1px;
    height: 1px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    visibility: hidden;
  }
  
  .input span::before, .input span::after {
    visibility: visible;
    position: absolute;
    left: 50%;
  }
  
  .input span::after {
    content: attr(data-year);
    top: 25px;
    transform: translateX(-50%);
    font-size: 20px;
  }
  
  .input span::before {
    content: attr(data-info);
    top: -100px;
    width: 100px;
    transform: translateX(-5px) rotateZ(-45deg);
    font-size: 15px;
    text-indent: -10px;
  }
  
  .description-flex-container {
    width: var(--parentWidth);
    font-weight: 400;
    font-size: 22px;
    margin-top: 100px;
    max-width: var(--parentMaxWidth);
  }
  
  .description-flex-container p {
    margin-top: 0;
    display: none;
  }
  
  .description-flex-container p.active {
    display: block;
  }
  
  /* Media Queries */
  @media (min-width: calc(var(--parentMaxWidth) / var(--parentWidthBase))) {
    .input::before {
      left: calc(-var(--parentMaxWidth) / var(--numDots) + var(--dotWidth) / 2);
    }
    
    .input::after {
      right: calc(-var(--parentMaxWidth) / var(--numDots) + var(--dotWidth) / 2);
    }
  }
  
  @media (max-width: 850px) {
    .input {
      width: var(--dotWidthSm);
      height: var(--dotWidthSm);
    }
  
    .input::before, .input::after {
      height: 3px;
    }
  
    .input::before {
      left: calc(-var(--parentWidth) / var(--numDots) + var(--dotWidthSm) / 2);
    }
  
    .input::after {
      right: calc(-var(--parentWidth) / var(--numDots) + var(--dotWidthSm) / 2);
    }
  }
  
  /* MOBILE */
  @media (max-width: 600px) {
    .flex-parent {
      justify-content: initial;
    }
  
    .input-flex-container {
      flex-wrap: wrap;
      justify-content: center;
      width: 100%;
      height: auto;
      margin-top: 15vh;
    }
  
    .input {
      width: 60px;
      height: 60px;
      margin: 0 10px 50px;
      background-color: var(--inactive);
    }
  
    .input::before, .input::after {
      content: none;
    }
  
    .input span {
      width: 100%;
      height: 100%;
      display: block;
    }
  
    .input span::before {
      top: calc(100% + 5px);
      transform: translateX(-50%);
      text-indent: 0;
      text-align: center;
    }
  
    .input span::after {
      top: 50%;
      transform: translate(-50%, -50%);
      color: #ECF0F1;
    }
  
    .description-flex-container {
      margin-top: 30px;
      text-align: center;
    }
  }
  
  @media (max-width: 400px) {
    body {
      min-height: 950px; /* just so our links won't get in the way of our content */
    }
  }